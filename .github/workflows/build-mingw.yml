name: Build with MinGW GCC
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

jobs:
  mingw64-x64:
    name: Build Skia with MinGW GCC

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-clang git python3 mingw-w64-x86_64-gn

      - name: "Clone skia"
        run: git clone --depth 1 https://github.com/mono/skia.git
      - name: "Build skia"
        run: |
          git config --global init.defaultBranch master
          cd skia
          rm bin/fetch-gn # not needed and will crash as it's not understanding msys
          echo -e '#!/bin/sh\nexit 0\n' > bin/fetch-gn
          echo test:
          bin/fetch-gn
          echo done $?
          python3 tools/git-sync-deps windows
          python3 bin/fetch-ninja
          bin/gn gen out/lib --platform=mingw --args='
            is_debug=false
            is_official_build=true
            is_trivial_abi=false
            skia_enable_fontmgr_win=true
            skia_enable_gpu=true
            skia_enable_pdf=true
            skia_use_freetype=false
            skia_use_system_libjpeg_turbo=false
            skia_use_system_libpng=false
            skia_use_system_libwebp=false
            skia_use_system_zlib=false
            skia_use_harfbuzz=false
            skia_use_icu=false
            skia_use_expat=false
          '
          third_party/ninja/ninja -C out/lib skia
          mkdir -p ../lib/skia/win-x64/lib
          cp --recursive include ../lib/skia/win-x64/include
          cp --recursive out/lib/*.lib ../lib/skia/win-x64/lib
      - name: Archive the build
        uses: actions/upload-artifact@v4
        with:
          name: windows-mingw64-x64
          path: lib
